//region Local Imports
import { CALLBACK_EVENTS } from "./consts.mjs";
import { saveMessageToDatabase } from "../db/index.mjs";
import { isRateLimited } from "./utilities/isRateLimited.mjs";
//endregion

function handleIncomingMessage({ bot, chatId, message, firstName }) {
  // Check if user is rate limited
  if (isRateLimited(chatId)) {
    bot.sendMessage(chatId, "You are sending too many requests. Please try again later.");
    return;
  }
  switch (true) {
    case /^\/start/i.test(message):
      handleFirstVisit({ bot, chatId, firstName });
      break;
    default:
      handleUnknownMessage(bot, chatId);
      break;
  }

  // saveMessageToDatabase({ chatId, message, firstName });
}

function handleCallbackQuery(bot, { data, message }) {
  if (data === CALLBACK_EVENTS.book_activity_registration) {
    const { message_id } = bot.sendMessage(
      message.chat.id,
      "–ü—ñ–¥–∫–∞–∂—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –≤–∞—à–µ —ñ–º'—è? –¶–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –¥–ª—è —Ä–æ–∑—É–º—ñ–Ω–Ω—è —è–∫ –¥–æ –≤–∞—Å –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—è",
      {
        reply_markup: {
          force_reply: true
        }
      }
    );
  }
}

function handleFirstVisit({ bot, chatId, firstName }) {
  bot.sendMessage(
    chatId,
    `–ü—Ä–∏–≤—ñ—Ç, ${firstName} üôã‚Äç‚ôÄÔ∏è–¢–µ–±–µ –≤—ñ—Ç–∞—î Legal Expert-–±–æ—Ç. 
–¢—É—Ç —Ç–∏ –∑–Ω–∞–π–¥–µ—à —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —â–æ–¥–æ —é—Ä–∏–¥–∏—á–Ω–∏—Ö –ø–æ—Å–ª—É–≥ –¥–ª—è —Ç–µ–±–µ —ñ —Ç–≤–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É
–¢–∏—Å–Ω–∏ —Å—Ç–∞—Ä—Ç —Ç–∞ –æ–±–∏—Ä–∞–π —Ç—É —é—Ä–∏–¥–∏—á–Ω—É –ø–æ—Å–ª—É–≥—É, —è–∫–∞ —Ç–æ–±—ñ –ø–∞—Å—É—î
  `,
    {
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: "–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é",
              url: process.env.CALENDLY_SCHEDULING_URL
            }
          ],
          [
            {
              text: "–ó–∞–ø–∏—Å –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ",
              callback_data: "book_activity_registration"
            }
          ],
          [
            {
              text: "–õ–µ–≥–∞–ª—ñ–∑–∞—Ü—ñ—è",
              callback_data: "request_legalization"
            }
          ]
        ]
      }
    }
  );
}

function handleUnknownMessage(bot, chatId) {
  bot.sendMessage(chatId, "Sorry, I don't understand.");
}

function handleReturningUser(bot, chatId) {
  bot.sendMessage(chatId, "Welcome back!");
}

export { handleIncomingMessage, handleCallbackQuery, handleFirstVisit }